name: Deploy jdungeon
on: [push]
jobs:
  deploy-database:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "jdungeon-database/docker-compose.yml"
          target: ./
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.10
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB
          script: |
            cd jdungeon-database
            docker-compose down --rmi all --remove-orphans
            docker-compose up -d
  deploy-website:
    runs-on: ubuntu-latest
    needs: deploy-database
    steps:
      - uses: actions/checkout@v3
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "jdungeon-website/docker-compose.yml"
          target: ./
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.10
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USER: ${{ secrets.MAIL_USER }}
          MAIL_KEY: ${{ secrets.MAIL_KEY }}
          CERT_PATH: ${{ secrets.CERT_PATH }}
          KEY_PATH: ${{ secrets.KEY_PATH }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: POSTGRES_HOST,POSTGRES_PORT,POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB,MAIL_HOST,MAIL_PORT,MAIL_USER,MAIL_KEY,CERT_PATH,KEY_PATH
          script: |
            cd jdungeon-website
            docker-compose down --rmi all --remove-orphans
            docker-compose up -d